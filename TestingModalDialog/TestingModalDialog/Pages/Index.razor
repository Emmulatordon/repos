@page "/"
@inject IModalService Modall
<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>
<button @onclick="OpenDialog">open</button>
<button @onclick="OpenConfirm">open</button>
<button @onclick="OpenCustom">open</button>
<button @onclick="OpenConfirmDelete">Confirm Delete</button>
<p>@_result</p>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />
@code{
    [CascadingParameter]
    public IModalService Modal {get;set;}
    private bool _result;
    private async void OpenDialog()
    {
        var options = new ModalOptions()
        {
            Position = ModalPosition.Middle,
            HideCloseButton = true,
                Size = ModalSize.ExtraLarge
        };
        var fetchModal = Modal.Show<FetchData>("Confirm Delete",options);
        var result = await fetchModal.Result;

    }
    private async void OpenCustom()
    {
        var options = new ModalOptions()
        {
                

        };
        var fetchModal = Modal.Show<ConfirmWithCustomLayout>("",options);
        var result = await fetchModal.Result;

    }  
    private async void OpenConfirm()
    {
        var options = new ModalOptions()
            {
                Position = ModalPosition.Middle,
                HideCloseButton = true,
                // HideHeader = true,
                Size = ModalSize.Medium               

            };
        var parameters = new ModalParameters().Add(nameof(Confirm.Message),"Are you Sure you want to delete?");
        parameters.Add(nameof(Confirm.Header),"Confirm Delete");
        var fetchModal = Modal.Show<Confirm>("Confirm Delete",parameters, options);
        var result = await fetchModal.Result;
   
            _result = (bool)(result.Data);
            StateHasChanged();
    }    
    private async void OpenConfirmDelete()
    {
        var parameters = new ModalParameters().Add(nameof(ConfirmDelete.Message), "Are you Sure yre you Sure you want tnt to delete?");
        var fetchModal = Modal.Show<ConfirmDelete>("Confirm Delete", parameters);
        var result = await fetchModal.Result;   
            _result = (bool)(result.Data);
            StateHasChanged();
    }
}
